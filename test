Connection Procedure
Once a TCP connection is established, clients should send a login message to authorize the session.

If the client’s credentials are not accepted, a Login Rejected message will be sent to the client and the TCP connection will be closed.

If the login is accepted, the server will send a Login Accepted message, which will inform the client of which request mode is allowed on the session. (See above).

After a Login Accepted is received, clients should begin sending Heartbeat messages to the server on a periodic basis. If the server fails to receive client heartbeats after some interval, it may close the client’s TCP connection.

At some point after the Login Accepted message has been received, clients will receive a Start Of Session message which contains the current session ID. If the client is connecting into a server operating with a session that is already in progress, they should expect to receive a Start Of Session message immediately following the Login Accepted message.

After receipt of a Login Accepted message, clients may send either a Replay Request, ReplayAll Request, or Stream Request message to the server to initiate data transmission.

If the data transmission request is rejected, clients will receive a Replay Rejected or Stream Rejected message with a corresponding error reason. Clients may issue a new transmission request without closing and re-opening their connection.

If the data transmission request is accepted, the server will transmit a Replay Begin or Stream Begin message containing the next expected sequence number, followed by Sequenced Message events containing the requested data.


MessageHeader={
    blockLength=96;
    templateId=1;
    schemaId=1;
    version=266
};
ClOrdID=1686883344217;
Symbol=UBER;
Side=Sell(2);
OrderQty=300;
OrdType=Limit(2);
Price=15;
TimeInForce=Day(0);
OrderCapacity=Agency(A);
CustOrderCapacity=MemberTradingOnTheirOwnAccount(1);
ExecInst=4;
RepriceFrequency=SingleReprice(0);
RepriceBehavior=RepriceLockRepriceCross(2);
UnsequencedMessage={
    TCPHeader={
        MessageLength=102;
        MessageType=104
    }    


Unsequenced Message (Message Type = 104)
Offset

Length

Type

Name

Description

3

n

Bytes

Payload

Payload of the message

Unsequenced messages allow clients to send business level messages to the server while streaming data. The messages may be sent on a supported server connection after the user completes the login process and successfully negotiates a Stream session.

The unsequenced message is inferred to apply to the session ID of the in-progress Stream session. If the End of Session message is received, no further unsequenced messages will be accepted on this connection.

The format of the payload of the message is defined by the protocol which is wrapped by this session.

If an unsequenced message is malformed or invalid, the client will be forcibly disconnected.
