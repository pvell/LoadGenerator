import sqlite3
import xml.etree.ElementTree as ET
from multiprocessing import Pool, cpu_count
from tqdm import tqdm

# Rest of the script remains the same as you provided...

def create_table():
    conn = sqlite3.connect('trades.db')
    cursor = conn.cursor()

    # Create the table for storing the trade data
    cursor.execute('''CREATE TABLE IF NOT EXISTS trades (
                        Quantity INTEGER,
                        Side TEXT,
                        Pty_ID TEXT,
                        Pty_R TEXT,
                        Sub_ID TEXT,
                        Rpt_ID TEXT,
                        Ultimate_Clearing_Firm TEXT,
                        Entering_Firm_Col1 TEXT,
                        Entering_Firm_Col2 TEXT
                     )''')

    conn.commit()
    conn.close()

# Rest of the script remains the same as you provided...

# Function to fetch data in batches from the trades database
def fetch_data_in_batches(batch_size):
    # Create the table for storing the trade data
    create_table()

    conn = sqlite3.connect('trades.db')
    cursor = conn.cursor()

    # Rest of the script remains the same as you provided...

# Rest of the script remains the same as you provided...

if __name__ == '__main__':
    batch_size = 10  # Adjust the batch size as per your requirement
    fetch_data_in_batches(batch_size)
