import struct

def encode_fields(fields, message_type):
    encoded_fields = b''
    for field_type, field_value in fields:
        if field_type.startswith('string'):
            encoded_value = field_value.encode()
            encoded_fields += struct.pack(f'{len(encoded_value)}s', encoded_value)
        elif field_type.startswith('int'):
            encoded_value = int(field_value).to_bytes(4, 'big')
            encoded_fields += struct.pack('!i', int.from_bytes(encoded_value, 'big'))
        elif field_type.startswith('float'):
            encoded_value = struct.pack('!f', float(field_value))
            encoded_fields += struct.pack('!f', float.from_bytes(encoded_value, 'big'))
        elif field_type.startswith('group'):
            group_fields = field_type.split(':')[1:]
            encoded_value = b''
            for group_field in group_fields:
                group_tag, group_value = group_field.split('=')
                encoded_group_field = encode_field(int(group_tag), group_value, message_type)
                encoded_value += encoded_group_field
            encoded_fields += encoded_value
        elif field_type.startswith('composite'):
            composite_fields = field_value.split(';')
            encoded_value = encode_fields([field.split('=') for field in composite_fields], message_type)
            encoded_fields += encoded_value
    return encoded_fields
