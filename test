import socket
import struct

# TCP connection details
TCP_IP = '127.0.0.1'
TCP_PORT = 1234

# Login details
TOKEN_TYPE = b'\x01'  # Example token type
LOGIN_TOKEN = b'MyLoginToken'  # Example login token

# Stream request details
SESSION_ID = 1234567890  # Example session ID
NEXT_SEQUENCE_NUMBER = 1  # Example next sequence number

# NewOrderSingle message details
CL_ORD_ID = 1686883344217  # Example ClOrdID
SYMBOL = 'UBER'  # Example symbol
SIDE = 2  # Example side
ORDER_QTY = 300  # Example order quantity
ORD_TYPE = 2  # Example order type
PRICE = 15  # Example price
TIME_IN_FORCE = 0  # Example time in force
ORDER_CAPACITY = 'A'  # Example order capacity
CUST_ORDER_CAPACITY = 1  # Example customer order capacity
EXEC_INST = 4  # Example execution instruction


def send_message(message):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((TCP_IP, TCP_PORT))
    s.sendall(message)
    response = s.recv(1024)
    s.close()
    return response


# Login Request
login_request_type = 100
login_request_length = len(TOKEN_TYPE) + len(LOGIN_TOKEN) + 4  # 4 bytes for message type and length
login_request_header = struct.pack('!BHB', login_request_type, login_request_length, len(TOKEN_TYPE))
login_request = login_request_header + TOKEN_TYPE + LOGIN_TOKEN
login_response = send_message(login_request)
print(f'Login Response: {login_response}')

# Start Of Session
start_of_session_type = 3
start_of_session_length = 12  # 4 bytes for message type and length, 8 bytes for session ID
start_of_session_header = struct.pack('!BHBQ', start_of_session_type, start_of_session_length, SESSION_ID)
start_of_session = start_of_session_header
start_of_session_response = send_message(start_of_session)
print(f'Start Of Session Response: {start_of_session_response}')

# Stream Request
stream_request_type = 103
stream_request_length = 16  # 4 bytes for message type and length, 8 bytes for session ID, 8 bytes for next sequence number
stream_request_header = struct.pack('!BHBQQ', stream_request_type, stream_request_length, SESSION_ID, NEXT_SEQUENCE_NUMBER)
stream_request = stream_request_header
stream_request_response = send_message(stream_request)
print(f'Stream Request Response: {stream_request_response}')

# NewOrderSingle message
new_order_single_type = 104
new_order_single_length = 84  # 4 bytes for message type and length, 80 bytes for NewOrderSingle fields
new_order_single_header = struct.pack('!BHB', new_order_single_type, new_order_single_length)
new_order_single = (
    new_order_single_header +
    struct.pack('!Q', CL_ORD_ID) +
    SYMBOL.encode('utf-8') + b'\x00' * (12 - len(SYMBOL)) +
    struct.pack('!B', SIDE) +
    struct.pack('!I', ORDER_QTY) +
    struct.pack('!B', ORD_TYPE) +
    struct.pack('!d', PRICE) +
    struct.pack('!B', TIME_IN_FORCE) +
    ORDER_CAPACITY.encode('utf-8') +
    struct.pack('!B', CUST_ORDER_CAPACITY) +
    struct.pack('!B', EXEC_INST)
)
new_order_single_response = send_message(new_order_single)
print(f'NewOrderSingle Response: {new_order_single_response}')
