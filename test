from flask import Flask, render_template
from flask_socketio import SocketIO, emit
import yaml
import os

app = Flask(__name__)
socketio = SocketIO(app)



def load_inventory_data():
    data_centers = []

    # Assuming inventory.mml is in the same directory as the script
    inventory_file_path = os.path.join(os.path.dirname(__file__), 'inventory.mml')

    with open(inventory_file_path, 'r') as inventory_file:
        inventory_data = yaml.safe_load(inventory_file)

    # Updated path for the bindings folder
    bindings_folder_path = os.path.join(os.path.dirname(__file__), 'bindings')

    for host_name, host_details in inventory_data.get('machines', {}).items():
        data_center_name = host_details.get('dc', 'default')

        # Create data center if not exists
        data_center = next((dc for dc in data_centers if dc['name'] == data_center_name), None)
        if data_center is None:
            data_center = {'name': data_center_name, 'hosts': []}
            data_centers.append(data_center)

        # Create host
        host_folder_path = os.path.join(bindings_folder_path, host_name)  # Updated path
        host = {'name': host_name, 'cores': host_details.get('cores', 0), 'memory': host_details.get('memory', 'N/A'), 'networks': {}}

        # Add networks
        for interface_name, interface_details in host_details.get('interfaces', {}).items():
            host['networks'][interface_name] = f"{interface_details['ip']} ({interface_details['network']})"

        # Check if there are bindings for the host
        bindings_file_path = os.path.join(host_folder_path, 'binding.mml')  # Updated path
        if os.path.exists(bindings_file_path):
            with open(bindings_file_path, 'r') as bindings_file:
                host['cpus'] = yaml.safe_load(bindings_file).get('bindings', {}).get(host_name, {}).get('cores', {})
        else:
            host['cpus'] = {}

        data_center['hosts'].append(host)

    return {'data_centers': data_centers}




@app.route('/')
def index():
    inventory_data = load_inventory_data()
    # For demonstration purposes, taking the first host of the first data center
    #host = inventory_data['data_centers'][0]['hosts'][0]['name']
    #binding_data = load_binding_data(host)

    return render_template('index.html', inventory=inventory_data['data_centers'])

if __name__ == '__main__':
    print("Before creating Flask app")
    
    # Use socketio.run instead of app.run for Socket.IO
    socketio.run(app, host='0.0.0.0', port=5001, debug=True)

    print("After running Flask app")
