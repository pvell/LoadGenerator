import struct


def decode_message(schema, encoded_message):
    template_id = struct.unpack('B', encoded_message[2:3])[0]
    template_name = next((key for key, value in schema.items() if value['id'] == template_id), None)
    fields = {}

    if template_name is None:
        raise ValueError(f"Unknown template ID: {template_id}")

    encoded_message = encoded_message[3:]

    for field_id, field_name in schema[template_name]['fields'].items():
        if len(encoded_message) == 0:
            break

        if field_name == 'NewOrderSingleClOrdID':
            if len(encoded_message) >= 20:
                field_value = struct.unpack('20s', encoded_message[:20])[0].decode('utf-8')
                encoded_message = encoded_message[20:]
            else:
                field_value = None
        elif field_name == 'NewOrderSingleMPID':
            if len(encoded_message) >= 4:
                field_value = struct.unpack('4s', encoded_message[:4])[0].decode('utf-8')
                encoded_message = encoded_message[4:]
            else:
                field_value = None
        elif field_name == 'NewOrderSingleSymbol':
            if len(encoded_message) >= 6:
                field_value = struct.unpack('6s', encoded_message[:6])[0].decode('utf-8')
                encoded_message = encoded_message[6:]
            else:
                field_value = None
        elif field_name == 'NewOrderSingleSymbolSfx':
            if len(encoded_message) >= 3:
                field_value = struct.unpack('3s', encoded_message[:3])[0].decode('utf-8')
                encoded_message = encoded_message[3:]
            else:
                field_value = None
        elif field_name.endswith('Type'):
            field_value = struct.unpack('B', encoded_message[:1])[0]
            encoded_message = encoded_message[1:]
        elif field_name.startswith('uint'):
            field_value = struct.unpack('I', encoded_message[:4])[0]
            encoded_message = encoded_message[4:]
        elif field_name.startswith('char'):
            field_value = struct.unpack('s', encoded_message[:1])[0].decode('utf-8')
            encoded_message = encoded_message[1:]
        elif field_name == 'NewOrderSingleLnkId':
            field_value = struct.unpack('H', encoded_message[:2])[0]
            encoded_message = encoded_message[2:]
        else:
            raise ValueError(f"Unknown field type for field: {field_name}")

        fields[field_name] = field_value

    return template_name, fields


