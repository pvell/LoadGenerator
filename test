import struct

# New Order Single
cl_ord_id = '1686883344217'
mpid = None  # Null value
symbol = 'UBER'
symbol_sfx = None  # Null value
side = 2  # Sell
order_qty = 300
ord_type = 2  # Limit
price = 15.0  # Null value
time_in_force = '0'  # Day
order_capacity = 'A'  # Agency
cust_order_capacity = 1  # MemberTradingOnTheirOwnAccount
exec_inst = '0'
peg_offset_value = None  # Null value
peg_price_type = None  # Null value
expire_time = None  # Null value
min_qty = 0  # Null value
display_qty = 0  # Null value
display_method = None  # Null value
reserve_replenish_timing = None  # Null value
display_min_incr = 0  # Null value
locate_reqd = None  # Null value
reprice_frequency = None  # Null value
reprice_behavior = None  # Null value
cancel_group_id = None  # Null value
stp_group_id = None  # Null value
self_trade_prevention = None  # Null value
risk_group_id = None  # Null value
lnk_id = None  # Null value




new_order_single_body = b''

# Pack each field individually and print the hex representation
new_order_single_body += struct.pack('!16s', cl_ord_id.encode('utf-8'))
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!4s', mpid.encode('utf-8') if mpid else b'\xFF')
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!6s', symbol.encode('utf-8'))
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!6s', symbol_sfx.encode('utf-8') if symbol_sfx else b'\xFF')
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', side)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!I', order_qty)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', ord_type)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!f', price if price else 0.0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', int(time_in_force))
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', ord_capacity.encode('utf-8'))
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', cust_order_capacity)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', int(exec_inst))
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!f', peg_offset_value if peg_offset_value else 0.0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!2s', peg_price_type.encode('utf-8') if peg_price_type else b'\xFF')
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!Q', expire_time if expire_time else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', min_qty if min_qty else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', display_qty if display_qty else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!2s', display_method.encode('utf-8') if display_method else b'\xFF')
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!2s', reserve_replenish_timing.encode('utf-8') if reserve_replenish_timing else b'\xFF')
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!B', display_min_incr if display_min_incr else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!2s', locate_reqd.encode('utf-8') if locate_reqd else b'\xFF')
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!Q', reprice_frequency if reprice_frequency else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!2s', reprice_behavior.encode('utf-8') if reprice_behavior else b'\xFF')
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!Q', cancel_group_id if cancel_group_id else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!Q', stp_group_id if stp_group_id else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!Q', self_trade_prevention if self_trade_prevention else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!Q', risk_group_id if risk_group_id else 0)
print(new_order_single_body.hex())

new_order_single_body += struct.pack('!Q', lnk_id if lnk_id else 0)
print(new_order_single_body.hex())
