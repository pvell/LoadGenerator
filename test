def fromApp(self, message, sessionID):
    session_id = sessionID.toString()
    with open(self.get_log_file(), "a") as file:
        file.write(f"Session: {session_id}\n")
        file.write(message.toString() + '\n')
    print("received application message", message.toString())
    msg_type = fix.MsgType()
    message.getHeader().getField(msg_type)

    if msg_type.getValue() == fix.MsgType_ExecutionReport:
        cl_ord_id = fix.ClOrdID()
        exec_type = fix.ExecType()
        order_id = fix.OrderID()
        side = fix.Side()  # We'll capture the side as well
        message.getField(cl_ord_id)
        message.getField(exec_type)
        message.getField(order_id)
        message.getField(side)
        
        # Check if the execution report matches the conditions
        if exec_type.getValue() == fix.ExecType_NEW or exec_type.getValue() == fix.ExecType_TRADE:
            # Extract ClOrdID and OrdID from the execution report
            clordid = cl_ord_id.getString()
            ordid = order_id.getString()

            # Store the ClOrdID and its corresponding side in the dictionary
            self.captured_clordid_side_mapping[clordid] = side.getString()

            # Add the ClOrdID to the list
            self.captured_clordids.append(clordid)






def generate_message(self, message_type, session_id):
    # ... (previous code)

    elif message_type.lower() == "ordercancel":
        # Generate OrderCancelRequest message using captured ClOrdIDs
        if self.captured_clordids:
            # Pick a random ClOrdID from the list
            clordid = random.choice(self.captured_clordids)
            
            # Get the corresponding side from the captured_clordid_side_mapping
            side = self.captured_clordid_side_mapping.get(clordid, "UNKNOWN")

            message = fix.Message()
            message.getHeader().setField(fix.BeginString(session_id.getBeginString().getString()))
            message.getHeader().setField(fix.MsgType(fix.MsgType_OrderCancelRequest))
            message.getHeader().setField(fix.SenderCompID(session_id.getSenderCompID().getString()))
            message.getHeader().setField(fix.TargetCompID(session_id.getTargetCompID().getString()))
            message.getHeader().setField(fix.MsgSeqNum(self.get_outgoing_seq_num(session_id)))
            message.setField(fix.ClOrdID(self.generate_clordid()))

            # Set the OrigClOrdID and other fields for the OrderCancelRequest message
            message.setField(fix.OrigClOrdID(clordid))
            message.setField(fix.Side(side))  # Set the captured side

            # Set other fields for the OrderCancelRequest message

        else:
            message = None

        return message
