import xml.etree.ElementTree as ET

def load_schema(xml_schema):
    root = ET.fromstring(xml_schema)

    composite_dict = {}
    type_dict = {}

    for composite_elem in root.findall(".//composite"):
        composite_name = composite_elem.get("name")
        field_dict = {}

        for type_elem in composite_elem.findall(".//type"):
            type_name = type_elem.get("name")
            primitive_type = type_elem.get("primitiveType")
            presence = type_elem.get("presence", "optional")
            constant_value = type_elem.text

            field_dict[type_name] = {
                "primitiveType": primitive_type,
                "presence": presence,
                "constantValue": constant_value,
            }

        composite_dict[composite_name] = field_dict

    for enum_elem in root.findall(".//enum"):
        enum_name = enum_elem.get("name")
        value_dict = {}

        for valid_value_elem in enum_elem.findall(".//validValue"):
            valid_value_name = valid_value_elem.get("name")
            valid_value = valid_value_elem.text

            value_dict[valid_value_name] = valid_value

        type_dict[enum_name] = value_dict

    return composite_dict, type_dict
