            elif message_type.lower() == "ordercancel":
                # Generate OrderCancelRequest message using captured ClOrdIDs
                if self.captured_clordids:
                    clordid = random.choice(self.captured_clordids)
                    clordid_info = self.captured_clordid_side_mapping.get(clordid)
                    if clordid_info is not None:
                        session_id_str = clordid_info.get("session")
                        clordid_session = self.sessions.get(session_id_str)
                        print(session_id_str,clordid_session)

                        if clordid_session is not None:
                            side = clordid_info["side"]
                            tag_21035 = clordid_info["tag_21035"]
                            #side = self.captured_clordid_side_mapping.get(clordid, "UNKNOWN")
                            message = fix.Message()
                            sending_time = datetime.datetime.utcnow().strftime('%Y%m%d-%H:%M:%S.%f')[:-3]
                            message.setField(60,sending_time)
                            message.getHeader().setField(fix.BeginString(session_id.getBeginString().getString()))
                            message.getHeader().setField(fix.MsgType(fix.MsgType_OrderCancelRequest))
                            message.getHeader().setField(fix.SenderCompID(session_id.getSenderCompID().getString()))
                            message.getHeader().setField(fix.TargetCompID(session_id.getTargetCompID().getString()))
                            message.getHeader().setField(fix.MsgSeqNum(self.get_outgoing_seq_num(session_id)))
                            message.setField(fix.ClOrdID(self.generate_clordid()))

                            message.setField(fix.OrigClOrdID(clordid))
                            message.setField(fix.Side(side))
                            message.setField(21035, tag_21035)
                            print(message)
                            
                            # Send the Order Cancel Request on the same session as the corresponding ClOrdID
                            fix.Session.sendToTarget(message, clordid_session)
                        else:
                            print(f"Error: ClOrdID Session info not found for ClOrdID={clordid}")
                            return fix.Message()

                    else:
                        print(f"Error: ClOrdID info not found for ClOrdID={clordid}")
                        return fix.Message()



