import sqlite3
import sys

db_name = sys.argv[1]

# List of exchanges
exchanges = ["MEMX", "EMLD", "BATO", "C2OX", "EDGO", "GMNI", "MCRY", "MPRL", "XASE", "XBOX", "XBXO", "XCBO", "XISX", "XMIO", "XNDQ", "XPHO", "XPSE"]

# Connect to the SQLite database
conn = sqlite3.connect(db_name)
cursor = conn.cursor()

cursor.execute("DROP TABLE IF EXISTS summary3;")

# Create a summary table with dynamic columns for each exchange
cursor.execute(f'''CREATE TABLE IF NOT EXISTS summary2 (
                    Ultimate_Clearing_Firm TEXT PRIMARY KEY,
                    {', '.join([f"{exchange} INTEGER " for exchange in exchanges])}
                 )''')

# Commit the changes to create the summary table
conn.commit()

# Create a dictionary to hold the aggregated data
summary_data = {}

# Iterate through each exchange to populate the summary data
for exchange in exchanges:
    table_name = f'grouped_trades_{exchange}'
    
    # Check if the table exists in the database
    cursor.execute(f"SELECT name FROM sqlite_master WHERE type='table' AND name=?;", (table_name,))
    result = cursor.fetchone()
    
    if result:
        # Calculate the sum of quantities for each Ultimate_Clearing_Firm in the exchange-specific table
        query = f'''
            SELECT
                COALESCE(Ultimate_Clearing_Firm, Entering_Firm_Col1) AS Firm_Type,
                SUM(CASE
                    WHEN Ultimate_Clearing_Firm IS NULL THEN Quantity
                    ELSE 0
                END) AS Entering_Firm_Col1_Quantity,
                SUM(CASE
                    WHEN Ultimate_Clearing_Firm IS NOT NULL THEN Quantity
                    ELSE 0
                END) AS Ultimate_Clearing_Firm_Quantity
            FROM {table_name}
            WHERE Sub_ID = 'C' AND TRANS_TYPE = 0
            GROUP BY Firm_Type
        '''
        cursor.execute(query)
        
        # Fetch the results and update the summary_data dictionary
        for row in cursor.fetchall():
            ultimate_clearing_firm, total_quantity = row
            if ultimate_clearing_firm not in summary_data:
                summary_data[ultimate_clearing_firm] = {exchange: total_quantity}
            else:
                summary_data[ultimate_clearing_firm][exchange] = total_quantity

# Insert the aggregated data into the summary table
for ultimate_clearing_firm, exchange_data in summary_data.items():
    query = f'''
        INSERT OR REPLACE INTO summary3 (Ultimate_Clearing_Firm, {', '.join([f"{exchange}" for exchange in exchanges])})
        VALUES (?, {', '.join(['?' for _ in exchanges])})
    '''
    cursor.execute(query, [ultimate_clearing_firm] + [exchange_data.get(exchange, 0) for exchange in exchanges])

# Commit the changes to populate the summary table
conn.commit()

# Close the connection
conn.close()
