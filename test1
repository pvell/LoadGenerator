8=FIXT.1.19=8835=A34=143=Y49=SMRT0352=20240109-13:58:00.69156=TEST011408=1.398=0108=301137=910=1278=FIXT.1.19=5535=534=249=SMRT0352=20240109-13:58:02.36256=TEST0110=1168=FIXT.1.19=8835=A34=343=Y49=SMRT0352=20240109-14:03:03.64756=TEST011408=1.398=0108=301137=910=1248=FIXT.1.19=5535=534=449=SMRT0352=20240109-14:03:05.36256=TEST0110=1128=FIXT.1.19=8835=A34=543=Y49=SMRT0352=20240109-14:09:27.49756=TEST011408=1.398=0108=301137=910=1418=FIXT.1.19=5535=534=649=SMRT0352=20240109-14:09:29.36256=TEST0110=126


import quickfix as fix
import time
import datetime
import os

class MyApplication(fix.Application):
    def __init__(self):
        super().__init__()
        self.sessions = {}
        self.log_directory = "log"

    def onCreate(self, sessionID):
        print("Session created -", sessionID.toString())
        self.sessions[sessionID] = fix.Session.lookupSession(sessionID)

    def fromApp(self, message, sessionID):
        # Log the received message to the specified file
        log_file_path = self.get_log_file()
        with open(log_file_path, "a") as log_file:
            log_file.write(f"Received FIX Message: {message.toString()}\n")
        fix.Session.sendToTarget(message, sessionID)

    def toApp(self, message, sessionID):
        # Log the sent message to the specified file
        log_file_path = self.get_log_file()
        with open(log_file_path, "a") as log_file:
            log_file.write(f"Sent FIX Message: {message.toString()}\n")
        fix.Session.sendToTarget(message, sessionID)

    def fromAdmin(self, message, sessionID):
        pass

    def toAdmin(self, message, sessionID):
        if message.getHeader().getField(fix.MsgType()).getString() == fix.MsgType_Logon:
            message.getHeader().setField(1408, "1.3")
            message.getHeader().setField(43, "Y")
            print("sent admin message", message.toString())
        return True

    def onLogout(self, sessionID):
        print("Logout initiated -", sessionID.toString())

    def onLogon(self, sessionID):
        print("Logon Successful -", sessionID.toString())

    def get_log_file(self):
        log_directory = "log"
        os.makedirs(log_directory, exist_ok=True)
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H")
        log_file_name = f"log_file_{timestamp}.log"
        return os.path.join(self.log_directory, log_file_name)

    def run(self):
        settings = fix.SessionSettings(self.connection_config_file)
        application = fix.SocketInitiator(self, fix.FileStoreFactory(settings), settings)
        application.start()

        time.sleep(1)

        application.stop()


app = MyApplication()
app.connection_config_file = "acceptor.cfg"

# Run the FIX application
app.run()






2024-01-09T09:09:27-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:27.498068102 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Publishing Logon: HeartbeatIntervalSeconds=30
2024-01-09T09:09:27-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:27.498098824 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Completed logon: nextExpectedSequence=6
2024-01-09T09:09:27-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:27.498100486 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Changing State from Received Logon to Logged In
2024-01-09T09:09:27-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:27.498104876 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : EventServer : Changing State from Connected to Logged In
2024-01-09T09:09:28-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:28.362013968 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Publishing Heartbeat
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362325266 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Changing State from Logged In to Received Logout
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362381504 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Publishing Logout: Text=Client initiated logout
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362398709 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : EventServer : Changing State from Logged In to Awaiting Disconnect
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362518486 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixConnection : Remote Client shutdown: [local=10.3.128.182:31997,remote=10.3.44.2:54550]
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362677379 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : EventServer : Changing State from Awaiting Disconnect to Disconnecting
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362687027 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Changing State from Live to Disconnecting
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362693238 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Changing State from Received Logout to Disconnecting
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362722693 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : EventServer : Changing State from Disconnecting to Disconnected
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362728300 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Changing State from Disconnecting to Disconnected
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362730884 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Disconnected
2024-01-09T09:09:29-05:00 gc22008.options.ewr2.memx.tech bash[2458717]: 2024/01/09 14:09:29.362732965 UTC gc22008 [DEBUG] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Changing State from Disconnecting to Disconnected
