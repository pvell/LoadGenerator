
2024-01-08T11:37:09-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:37:09.403689113 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Live outbound sequence 42351
2024-01-08T11:37:09-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:37:09.403737602 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Completed logon: nextExpectedSequence=2
2024-01-08T11:37:09-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:37:09.477279101 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Completed Replay from 1 to 42353
2024-01-08T11:37:09-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:37:09.477304335 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Live outbound sequence 42352
2024-01-08T11:37:11-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:37:11.004308349 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Discarding extra event received after already receiving Logout: header=35=0|49=SMRT03|56=TEST01|34=5|52=20240108-16:37:11.004|, fields=8=FIXT.1.1|9=55|35=0|34=5|49=SMRT03|52=20240108-16:37:11.004|56=TEST01|10=106
2024-01-08T11:37:12-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:37:12.000196858 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Discarding extra event received after already receiving Logout: header=35=0|49=SMRT03|56=TEST01|34=6|52=20240108-16:37:12.000|, fields=8=FIXT.1.1|9=55|35=0|34=6|49=SMRT03|52=20240108-16:37:12.000|56=TEST01|10=104
2024-01-08T11:37:12-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:37:12.632046945 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : EventServer : Remote Client took too long to disconnect - forcing disconnect
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.953056377 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Incoming Gap Message (expected=5 Received=8) header=35=A|49=SMRT03|56=TEST01|34=8|52=20240108-16:39:02.952|43=true| fields=8=FIXT.1.1|9=87|35=A|34=8|43=Y|49=SMRT03|52=20240108-16:39:02.952|56=TEST01|1408=1.3|98=0|108=1|1137=9|10=086
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.953285888 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Live outbound sequence 42354
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.953323558 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Completed logon: nextExpectedSequence=5
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.953330204 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : EventServer : Requesting Resend from sequence 5
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.953726585 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Incoming Gap Message (expected=5 Received=9) header=35=2|49=SMRT03|56=TEST01|34=9|52=20240108-16:39:02.953| fields=8=FIXT.1.1|9=68|35=2|34=9|49=SMRT03|52=20240108-16:39:02.953|56=TEST01|7=25375|16=0|10=211
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.953976204 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : EventServer : Requesting Resend from sequence 5
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.983693805 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Completed Replay from 25375 to 42358
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.983716204 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : FixPublisher : Live outbound sequence 42357
2024-01-08T11:39:02-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:02.984034091 UTC gc22008 [INFO ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Ignoring Incoming PossDup Message: header=35=4|49=SMRT03|56=TEST01|34=5|52=20240108-16:39:02.957|43=true|122=20240108-16:39:02.957| fields=8=FIXT.1.1|9=98|35=4|34=5|43=Y|49=SMRT03|52=20240108-16:39:02.957|56=TEST01|122=20240108-16:39:02.957|36=10|123=Y|10=200
2024-01-08T11:39:04-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:04.003902196 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Discarding extra event received after already receiving Logout: header=35=0|49=SMRT03|56=TEST01|34=12|52=20240108-16:39:04.003|, fields=8=FIXT.1.1|9=56|35=0|34=12|49=SMRT03|52=20240108-16:39:04.003|56=TEST01|10=156
2024-01-08T11:39:05-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:05.000209708 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Discarding extra event received after already receiving Logout: header=35=0|49=SMRT03|56=TEST01|34=13|52=20240108-16:39:05.000|, fields=8=FIXT.1.1|9=56|35=0|34=13|49=SMRT03|52=20240108-16:39:05.000|56=TEST01|10=155
2024-01-08T11:39:05-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:05.821577655 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Discarding extra event received after already receiving Logout: header=35=3|49=SMRT03|56=TEST01|34=14|52=20240108-16:39:05.821|, fields=8=FIXT.1.1|9=116|35=3|34=14|49=SMRT03|52=20240108-16:39:05.821|56=TEST01|45=41521|58=Tag appears more than once|371=447|372=8|373=13|10=122
2024-01-08T11:39:05-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:05.827887836 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Discarding extra event received after already receiving Logout: header=35=3|49=SMRT03|56=TEST01|34=15|52=20240108-16:39:05.821|, fields=8=FIXT.1.1|9=116|35=3|34=15|49=SMRT03|52=20240108-16:39:05.821|56=TEST01|45=41523|58=Tag appears more than once|371=447|372=8|373=13|10=125
2024-01-08T11:39:05-05:00 gc22008.options.ewr2.memx.tech bash[6776]: 2024/01/08 16:39:05.827935925 UTC gc22008 [WARN ] ACTOR.STREAM_MATCH_01: SMARTS_QA_TESTING_MATCH_01: CUSTOMER : ClientConsumer : Discarding extra event received after already receiving Logout: header=35=3|49=SMRT03|56=TEST01|34=16|52=20240108-16:39:05.821|, fields=8=FIXT.1.1|9=116|35=3|34=16|49=SMRT03|52=20240108-16:39:05.821|56=TEST01|45=41524|58=Tag appears more than once|371=447|372=8|373=13|10=127



import quickfix as fix
import time
import datetime
import os


class MyApplication(fix.Application):
    def __init__(self):
        super().__init__()
        self.sessions = {}
        self.log_directory = "log"
        

    def onCreate(self, sessionID):
        print("Session created -", sessionID.toString())
        self.sessions[sessionID] = fix.Session.lookupSession(sessionID)

    def fromApp(self, message, sessionID):
        # Log the received message to the specified file
        log_file_path = self.get_log_file()
        with open(log_file_path, "a") as log_file:
            log_file.write(f"Received FIX Message: {message.toString()}\n")

    def toApp(self, message, sessionID):
        pass

    def fromAdmin(self, message, sessionID):
        pass

    def toAdmin(self, message, sessionID):
        if message.getHeader().getField(fix.MsgType()).getString() == fix.MsgType_Logon:
            message.getHeader().setField(1408, "1.3")
            message.getHeader().setField(43, "Y")
            print("sent admin message", message.toString())
        return True

    def onLogout(self, sessionID):
        print("Logout initiated -", sessionID.toString())

    def onLogon(self, sessionID):
        print("Logon Successful -", sessionID.toString())

    def get_log_file(self):
        log_directory="log"
        os.makedirs(log_directory, exist_ok=True)
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H")
        log_file_name = f"log_file_{timestamp}.log"
        print(os.path.join(self.log_directory, log_file_name))
        return os.path.join(self.log_directory, log_file_name)


    def run(self):
        settings = fix.SessionSettings(self.connection_config_file)
        application = fix.SocketInitiator(self, fix.FileStoreFactory(settings), settings)
        application.start()

        time.sleep(1)

        application.stop()


app = MyApplication()
app.connection_config_file = "acceptor.cfg"


# Run the FIX application
app.run()


/TrdCaptRpt/RptSide/Pty/@R = Column AQ (21 = Clearing Org, 1 = Executing Clearing Firm, 26 = Position Account Type, 38 = Position Account, 14 = Give Up Clearing Firm, 2 = Executing Broker, 24 = Customer Account Number, 18 = Contra Clearing Firm, 38 = Position Account)

Customer Type (C/F/M) Customer Firm Market Maker - Column AR 
