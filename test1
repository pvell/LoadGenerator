while len(receive_buffer) >= 3:
    # Read the header to determine message type and length (3 bytes)
    header_bytes = receive_buffer[:3]
    
    # Unpack the header
    message_type, message_length = struct.unpack('!BH', header_bytes)

    if message_type == 0:
        # Handle heartbeat message
        print('Heartbeat message')
        # Update the receive buffer for the next iteration
        receive_buffer = receive_buffer[3:]
        continue

    # Check if the complete message is in the buffer
    if len(receive_buffer) < 3 + message_length:
        break

    # Extract the complete message
    complete_message = receive_buffer[3:3 + message_length]
    print('Complete message:', complete_message)

    # Process the complete message based on the message type
    self.handle_sbe_message(complete_message, message_type)

    # Update the receive buffer for the next iteration
    receive_buffer = receive_buffer[3 + message_length:]
