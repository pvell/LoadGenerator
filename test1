import pandas as pd
import string
import os

# Read the CSV file into a DataFrame
df = pd.read_csv('your_csv_file.csv')

# Get unique underliers
underliers = df['UnderlyingSymbol'].unique()

# Group underliers by the first alphabet of their name
underliers_by_alphabet = {letter: [] for letter in string.ascii_uppercase}
for underlier in underliers:
    first_letter = underlier[0].upper()
    underliers_by_alphabet[first_letter].append(underlier)

# Sort underliers within each alphabet group
for alphabet, underliers_list in underliers_by_alphabet.items():
    underliers_by_alphabet[alphabet] = sorted(underliers_list)

# Text to append at the beginning of each file
text_to_append = """
[Server]
config_file = connections.cfg

[OptionsSecurityIDs]
"""

# Iterate over underliers grouped by alphabet
for alphabet, underliers_list in underliers_by_alphabet.items():
    # Filter data for underliers starting with the current alphabet
    filtered_data = df[df['UnderlyingSymbol'].str.startswith(alphabet)]

    # Group option IDs by underlier
    option_ids_by_underlier = {}
    for underlier in underliers_list:
        underlier_data = filtered_data[filtered_data['UnderlyingSymbol'] == underlier]
        option_ids_by_underlier[underlier] = underlier_data['OptionId'].tolist()

    # Format option IDs by underlier
    formatted_option_ids = '\n'.join([f"{underlier} = {','.join(option_ids)}" for underlier, option_ids in option_ids_by_underlier.items()])

    # Write formatted_option_ids to a text file
    output_file = f'{alphabet}_option_ids.txt'
    with open(output_file, 'w') as file:
        # Write the text_to_append at the beginning of the file
        file.write(text_to_append)
        file.write("\n\n")
        file.write(formatted_option_ids)

    print(f'Option IDs for underliers starting with {alphabet} written to {output_file}')





import sys
import configparser

# Check if the script is provided with the path to the config.ini file
if len(sys.argv) < 2:
    print("Usage: python script.py <path_to_config_ini>")
    sys.exit(1)

# Get the path to the config.ini file from the command-line argument
config_ini_path = sys.argv[1]

# Read configuration from config.ini
config = configparser.ConfigParser()
config.read(config_ini_path)
