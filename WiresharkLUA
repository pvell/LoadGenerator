-- Declare the SBE template IDs
local TEMPLATE_ID_NEW_ORDER_SINGLE = 1
local TEMPLATE_ID_SHORT_TWO_SIDED_BULK_QUOTE = 2
local TEMPLATE_ID_LONG_TWO_SIDED_BULK_QUOTE = 3
local TEMPLATE_ID_SHORT_ONE_SIDED_BULK_QUOTE = 4
local TEMPLATE_ID_LONG_ONE_SIDED_BULK_QUOTE = 5
local TEMPLATE_ID_MASS_CANCEL_REQUEST = 8
local TEMPLATE_ID_ORDER_CANCEL_REQUEST = 7
local TEMPLATE_ID_ORDER_REPLACE_REQUEST = 6

-- Define the field types and lengths
local FIELD_TYPE_UINT16 = 1
local FIELD_TYPE_UINT8 = 2
local FIELD_TYPE_UTCTIMESTAMPNANOS = 3
local FIELD_TYPE_CHAR = 4

local LENGTH_TEMPLATE_ID = 1

-- Create the Wireshark dissector table
local sbe_dissector_table = DissectorTable.new("sbe.templateid", "SBE Template ID", ftypes.UINT16)

-- Define the dissector function for the SBE header
local function dissect_sbe_header(buffer, pinfo, tree)
    -- Extract the template ID from the SBE header
    local template_id = buffer(0, LENGTH_TEMPLATE_ID):le_uint()

    -- Create the SBE header tree item
    local sbe_header_tree = tree:add(f_sbe_header, buffer(0, 7))
    sbe_header_tree:set_text("SBE Header (Template ID: " .. template_id .. ")")

    -- Call the appropriate dissector function based on the template ID
    local dissector_func
    if template_id == TEMPLATE_ID_NEW_ORDER_SINGLE then
        dissector_func = dissect_new_order_single
    elseif template_id == TEMPLATE_ID_SHORT_TWO_SIDED_BULK_QUOTE then
        dissector_func = dissect_short_two_sided_bulk_quote
    elseif template_id == TEMPLATE_ID_LONG_TWO_SIDED_BULK_QUOTE then
        dissector_func = dissect_long_two_sided_bulk_quote
    elseif template_id == TEMPLATE_ID_SHORT_ONE_SIDED_BULK_QUOTE then
        dissector_func = dissect_short_one_sided_bulk_quote
    elseif template_id == TEMPLATE_ID_LONG_ONE_SIDED_BULK_QUOTE then
        dissector_func = dissect_long_one_sided_bulk_quote
    elseif template_id == TEMPLATE_ID_MASS_CANCEL_REQUEST then
        dissector_func = dissect_mass_cancel_request
    elseif template_id == TEMPLATE_ID_ORDER_CANCEL_REQUEST then
        dissector_func = dissect_order_cancel_request
    elseif template_id == TEMPLATE_ID_ORDER_REPLACE_REQUEST then
        dissector_func = dissect_order_replace_request
    else
        -- Unknown template ID, return without further dissection
        return
    end

    -- Call the dissector function for the specific template
    dissector_func(buffer, pinfo, tree)
end

-- Define the dissector function for the New Order Single template
local function dissect_new_order_single(buffer, pinfo, tree)
    -- Dissect New Order Single fields here
end

-- Define the dissector function for the Short Two Sided Bulk Quote template
local function dissect_short_two_sided_bulk_quote(buffer, pinfo, tree)
    -- Dissect Short Two Sided Bulk Quote fields here
end

-- Define the dissector functions for the remaining SBE message templates
-- ...

-- Register the SBE header dissector with the SBE dissector
sbe_dissector_table:add(TEMPLATE_ID_SBE_HEADER, dissect_sbe_header)

-- Register the SBE message template dissectors with the SBE dissector
-- ...

-- Register the SBE dissector as a heuristic dissector for TCP
DissectorTable.get("tcp.port"):add_heuristic("tcp", sbe_dissector_table)
